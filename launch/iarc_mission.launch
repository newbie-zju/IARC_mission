<?xml version="1.0" encoding="utf-8"?>
<launch>
    <!-- Common Interface -->
    <arg name="device" default="26804026"/>
    <arg name="rate" default="20"/>

    <!-- Camera Settings -->
    <arg name="serial" default="$(arg device)"/>
    <arg name="camera_name" default="mv_$(arg serial)"/>
    <arg name="camera" default="$(arg camera_name)"/>
    <arg name="frame_id" default="$(arg camera)"/>
    <arg name="calib_url" default="file://${ROS_HOME}/camera_info/$(arg camera_name).yaml"/>
    <arg name="fps" default="$(arg rate)"/>

    <arg name="idpf" default="0"/>
    <arg name="aec" default="false"/>
    <arg name="expose_us" default="70000"/>
    <arg name="agc" default="true"/>
    <arg name="gain_db" default="0.0"/>
    <arg name="cbm" default="0"/>
    <arg name="ctm" default="1"/>
    <arg name="dcfm" default="0"/>
    <arg name="hdr" default="false"/>
    <arg name="wbp" default="-1"/>
    <arg name="request" default="0"/>
    <arg name="mm" default="0"/>
    <arg name="jpeg_quality" default="80"/>

    <!-- Node Settings -->
    <arg name="output" default="screen"/>
    <arg name="proc" default="true"/>
    <arg name="view" default="false"/>
    <arg name="calib" default="false"/>
    <arg name="goalDetected" default="true"/>
    <arg name="trajectorygenerator" default="true"/>

    <!-- Node -->
    <include file="$(find dji_sdk)/launch/sdk_manifold.launch"/>
	<node pkg="iarc_mission" type="iarc_mission_node" name="iarc_mission_node" output="screen">
	</node>


    <node pkg="bluefox2" type="bluefox2_single_node" name="$(arg camera)" output="$(arg output)">
        <param name="identifier" type="string" value="$(arg serial)"/>
        <param name="frame_id" type="string" value="$(arg frame_id)"/>
        <param name="camera_name" type="string" value="$(arg camera_name)"/>
        <param name="calib_url" type="string" value="$(arg calib_url)"/>
        <param name="fps" type="double" value="$(arg fps)"/>
        <param name="idpf" type="int" value="$(arg idpf)"/>
        <param name="aec" type="bool" value="$(arg aec)"/>
        <param name="expose_us" type="int" value="$(arg expose_us)"/>
        <param name="agc" type="bool" value="$(arg aec)"/>
        <param name="gain_db" type="double" value="$(arg gain_db)"/>
        <param name="cbm" type="int" value="$(arg cbm)"/>
        <param name="ctm" type="int" value="$(arg ctm)"/>
        <param name="dcfm" type="int" value="$(arg dcfm)"/>
        <param name="hdr" type="bool" value="$(arg hdr)"/>
        <param name="wbp" type="int" value="$(arg wbp)"/>
        <param name="request" type="int" value="$(arg request)"/>
        <param name="mm" type="int" value="$(arg mm)"/>
        <param name="image_raw/compressed/jpeg_quality" type="int" value="$(arg jpeg_quality)"/>
    </node>

    <!-- Proc -->
    <node if="$(arg proc)"
        pkg="image_proc" type="image_proc" name="image_proc" ns="$(arg camera)">
    </node>

    <!-- View -->
    <arg name="image" default="image_rect_color"/>
    <node if="$(arg view)"
        pkg="image_view" type="image_view" name="viewer" ns="$(arg camera)"
        args="image:=$(arg image)" output="$(arg output)">
    </node>

    <!-- Calib -->
    <group if="$(arg calib)">
        <arg name="pattern" default="chessboard"/>
        <arg name="size"/>
        <arg name="square"/>
        <arg name="num_dist_coeff" default="2"/>
        <node pkg="camera_calibration" type="cameracalibrator.py"
            name="calibrator" output="screen"
            args="-p $(arg pattern) -s $(arg size) -q $(arg square)
            -k $(arg num_dist_coeff)
            image:=/$(arg camera)/image_raw camera:=/$(arg camera)">
        </node>
    </group>

    <node if="$(arg goalDetected)" 
	pkg="goal_detected" type="goal_detected" name="goal_detected" output="screen">
    </node>

    <node if="$(arg trajectorygenerator)" 
	pkg="trajectorygenerator" type="trajectorygenerator_node" name="trajectorygenerator" output="screen">
    </node>
	
	<node pkg="boundary_detect" type="boundaryDetect_node" name="boundaryDetect_node" output="screen"/>
	<node pkg="iarc_tf" type="ned_world_dynamic_node" name="ned_world_dynamic_node" output="screen"/>
	<!--node pkg="iarc_tf" type="ned_world_velocity_transform_node" name="ned_world_velocity_transform_node" output="screen"/-->
</launch>
